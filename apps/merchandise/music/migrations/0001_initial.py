# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import model_utils.fields
import django_extensions.db.fields
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('people', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, verbose_name='created', editable=False)),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, verbose_name='modified', editable=False)),
                ('romanized_name', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('released', models.DateField(db_index=True, null=True, blank=True)),
                ('price', models.IntegerField(null=True, blank=True)),
                ('uuid', django_extensions.db.fields.UUIDField(max_length=36, editable=False, blank=True)),
                ('released_as', models.CharField(help_text=b'Used for temporary name changes (i.e., \xe3\x82\x80\xe3\x81\xa6\xe3\x82\x93\xe5\xa8\x98\xe3\x80\x82).', max_length=200, blank=True)),
                ('romanized_released_as', models.CharField(help_text=b'Used for temporary name changes (i.e., Muten Musume).', max_length=200, blank=True)),
                ('number', models.CharField(max_length=10, blank=True)),
                ('slug', models.SlugField(blank=True)),
                ('is_indie', models.BooleanField(default=False, verbose_name=b'indie release?')),
                ('note', models.TextField(blank=True)),
                ('art', models.ImageField(null=True, upload_to=b'merchandise/music/editions/', blank=True)),
                ('is_compilation', models.BooleanField(default=False, verbose_name=b'compilation?')),
                ('edited_by', models.ManyToManyField(related_name=b'albums_edits', null=True, to='accounts.Editor', blank=True)),
                ('groups', models.ManyToManyField(related_name=b'albums', null=True, to='people.Group', blank=True)),
                ('idols', models.ManyToManyField(related_name=b'albums', null=True, to='people.Idol', blank=True)),
            ],
            options={
                'ordering': ('-released',),
                'abstract': False,
                'get_latest_by': 'released',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('romanized_name', models.CharField(max_length=100, blank=True)),
                ('name', models.CharField(max_length=100, blank=True)),
                ('kind', models.IntegerField(default=1, db_index=True, choices=[(1, b'Regular'), (2, b'Limited'), (3, b'Single V'), (4, b'Event V'), (11, b'Commemorative'), (12, b'Digital'), (99, b'Other')])),
                ('released', models.DateField(db_index=True, null=True, blank=True)),
                ('catalog_number', models.CharField(max_length=100, blank=True)),
                ('price', models.IntegerField(null=True, blank=True)),
                ('art', models.ImageField(null=True, upload_to=b'merchandise/music/editions/', blank=True)),
                ('album', models.ForeignKey(related_name=b'editions', blank=True, to='music.Album', null=True)),
            ],
            options={
                'ordering': ('kind', 'romanized_name'),
                'get_latest_by': 'released',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('romanized_name', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('logo', models.ImageField(null=True, upload_to=b'merchandise/music/labels/', blank=True)),
                ('slug', models.SlugField()),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Single',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, verbose_name='created', editable=False)),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, verbose_name='modified', editable=False)),
                ('romanized_name', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('released', models.DateField(db_index=True, null=True, blank=True)),
                ('price', models.IntegerField(null=True, blank=True)),
                ('uuid', django_extensions.db.fields.UUIDField(max_length=36, editable=False, blank=True)),
                ('released_as', models.CharField(help_text=b'Used for temporary name changes (i.e., \xe3\x82\x80\xe3\x81\xa6\xe3\x82\x93\xe5\xa8\x98\xe3\x80\x82).', max_length=200, blank=True)),
                ('romanized_released_as', models.CharField(help_text=b'Used for temporary name changes (i.e., Muten Musume).', max_length=200, blank=True)),
                ('number', models.CharField(max_length=10, blank=True)),
                ('slug', models.SlugField(blank=True)),
                ('is_indie', models.BooleanField(default=False, verbose_name=b'indie release?')),
                ('note', models.TextField(blank=True)),
                ('art', models.ImageField(null=True, upload_to=b'merchandise/music/editions/', blank=True)),
                ('has_8cm', models.BooleanField(default=False, verbose_name=b'8cm version?')),
                ('has_lp', models.BooleanField(default=False, verbose_name=b'LP version?')),
                ('has_cassette', models.BooleanField(default=False, verbose_name=b'cassette version?')),
                ('edited_by', models.ManyToManyField(related_name=b'singles_edits', null=True, to='accounts.Editor', blank=True)),
                ('groups', models.ManyToManyField(related_name=b'singles', null=True, to='people.Group', blank=True)),
                ('idols', models.ManyToManyField(related_name=b'singles', null=True, to='people.Idol', blank=True)),
                ('label', models.ForeignKey(related_name=b'singles', blank=True, to='music.Label', null=True)),
                ('participating_groups', models.ManyToManyField(related_name=b'singles_attributed_to', null=True, to='people.Group', blank=True)),
                ('participating_idols', models.ManyToManyField(help_text=b'The remaining idols that are not a member of the given groups.', related_name=b'singles_attributed_to', null=True, to='people.Idol', blank=True)),
                ('submitted_by', models.ForeignKey(related_name=b'single_submissions', blank=True, to='accounts.Editor', null=True)),
            ],
            options={
                'ordering': ('-released',),
                'abstract': False,
                'get_latest_by': 'released',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('released_as', models.CharField(help_text=b'Used for temporary name changes (i.e., \xe3\x82\x80\xe3\x81\xa6\xe3\x82\x93\xe5\xa8\x98\xe3\x80\x82).', max_length=200, blank=True)),
                ('romanized_released_as', models.CharField(help_text=b'Used for temporary name changes (i.e., Muten Musume).', max_length=200, blank=True)),
                ('romanized_name', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200, blank=True)),
                ('translated_name', models.CharField(max_length=200, blank=True)),
                ('is_cover', models.BooleanField(default=False, verbose_name=b'cover?')),
                ('is_alternate', models.BooleanField(default=False, verbose_name=b'alternate?')),
                ('romanized_name_alternate', models.CharField(max_length=200, verbose_name=b'alternate name (romanized)', blank=True)),
                ('name_alternate', models.CharField(max_length=200, verbose_name=b'alternate name', blank=True)),
                ('lyrics', models.TextField(help_text=b'Remember to use two spaces at the end of a line for line breaks!', blank=True)),
                ('romanized_lyrics', models.TextField(blank=True)),
                ('translated_lyrics', models.TextField(blank=True)),
                ('translation_notes', models.TextField(blank=True)),
                ('processed_lyrics', models.TextField(editable=False, blank=True)),
                ('processed_romanized_lyrics', models.TextField(editable=False, blank=True)),
                ('processed_translated_lyrics', models.TextField(editable=False, blank=True)),
                ('uuid', django_extensions.db.fields.UUIDField(max_length=36, null=True, editable=False, blank=True)),
                ('slug', models.SlugField(max_length=200, blank=True)),
                ('album', models.ForeignKey(related_name=b'tracks', blank=True, to='music.Album', null=True)),
                ('arrangers', models.ManyToManyField(related_name=b'arranged', null=True, to='people.Staff', blank=True)),
                ('composers', models.ManyToManyField(related_name=b'composed', null=True, to='people.Staff', blank=True)),
                ('groups', models.ManyToManyField(related_name=b'tracks', null=True, to='people.Group', blank=True)),
                ('idols', models.ManyToManyField(related_name=b'tracks', null=True, to='people.Idol', blank=True)),
                ('lyricists', models.ManyToManyField(related_name=b'wrote', null=True, to='people.Staff', blank=True)),
                ('original_track', models.ForeignKey(related_name=b'children', blank=True, to='music.Track', help_text=b"If this track is a cover or alternate, choose the original track it's based off of.", null=True)),
                ('participating_groups', models.ManyToManyField(related_name=b'tracks_attributed_to', null=True, to='people.Group', blank=True)),
                ('participating_idols', models.ManyToManyField(help_text=b'The remaining idols that are not a member of the given groups.', related_name=b'tracks_attributed_to', null=True, to='people.Idol', blank=True)),
                ('single', models.ForeignKey(related_name=b'tracks', blank=True, to='music.Single', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TrackOrder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('disc', models.PositiveSmallIntegerField(default=1)),
                ('position', models.PositiveSmallIntegerField(default=1)),
                ('is_aside', models.BooleanField(default=False, verbose_name=b'a-side?')),
                ('is_bside', models.BooleanField(default=False, verbose_name=b'b-side?')),
                ('is_album_only', models.BooleanField(default=False, verbose_name=b'album only?')),
                ('is_instrumental', models.BooleanField(default=False, verbose_name=b'instrumental?')),
                ('edition', models.ForeignKey(related_name=b'order', to='music.Edition')),
                ('track', models.ForeignKey(related_name=b'appears_on', to='music.Track')),
            ],
            options={
                'ordering': ('disc', 'position'),
                'verbose_name': 'track',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('romanized_name', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200, blank=True)),
                ('kind', models.PositiveSmallIntegerField(default=1, choices=[(1, b'Regular'), (2, b'Dance Shot'), (3, b'Close-up'), (4, b'Another'), (9, b'Other (PV)'), (11, b'Solo'), (12, b'Close-up (Solo)'), (21, b'Making of'), (22, b'Jacket Making'), (23, b'PV Making'), (31, b'Backstage'), (32, b'Performance'), (99, b'Other')])),
                ('released', models.DateField(null=True, blank=True)),
                ('still', models.ImageField(null=True, upload_to=b'merchandise/music/videos/', blank=True)),
                ('video_url', models.URLField(verbose_name=b'video URL', blank=True)),
                ('album', models.ForeignKey(related_name=b'videos', blank=True, to='music.Album', null=True)),
                ('single', models.ForeignKey(related_name=b'videos', blank=True, to='music.Single', null=True)),
            ],
            options={
                'get_latest_by': 'released',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='VideoTrackOrder',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('position', models.PositiveSmallIntegerField()),
                ('edition', models.ForeignKey(related_name=b'video_order', to='music.Edition')),
                ('video', models.ForeignKey(related_name=b'on_edition', to='music.Video')),
            ],
            options={
                'ordering': ('position',),
                'verbose_name': 'video track',
            },
            bases=(models.Model,),
        ),
        migrations.AlterUniqueTogether(
            name='videotrackorder',
            unique_together=set([('edition', 'video')]),
        ),
        migrations.AddField(
            model_name='edition',
            name='single',
            field=models.ForeignKey(related_name=b'editions', blank=True, to='music.Single', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='edition',
            name='tracks',
            field=models.ManyToManyField(related_name=b'editions', null=True, through='music.TrackOrder', to='music.Track', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='edition',
            name='videos',
            field=models.ManyToManyField(related_name=b'editions', null=True, through='music.VideoTrackOrder', to='music.Video', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='album',
            name='label',
            field=models.ForeignKey(related_name=b'albums', blank=True, to='music.Label', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='album',
            name='participating_groups',
            field=models.ManyToManyField(related_name=b'albums_attributed_to', null=True, to='people.Group', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='album',
            name='participating_idols',
            field=models.ManyToManyField(help_text=b'The remaining idols that are not a member of the given groups.', related_name=b'albums_attributed_to', null=True, to='people.Idol', blank=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='album',
            name='submitted_by',
            field=models.ForeignKey(related_name=b'album_submissions', blank=True, to='accounts.Editor', null=True),
            preserve_default=True,
        ),
    ]
